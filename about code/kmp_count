/*
 * kmpNext[]的意思：next'[i] = next[next[...[next[i]]]]
 * （直到next'[i] < 0或者x[next'[i]] != x[i]）
 * 这样的预处理可以快一些 
 */
#include<iostream>
#include<cstring>
#include<cstdio>
using namespace std;
const int MAXN = 1e6+5;
char x[MAXN];
char y[MAXN];
int Next[MAXN];
void preKMP(char x[], int m, int kmpNext[])
{
    int i, j;
    j = kmpNext[0] = -1;
    i = 0;
    while (i < m)
    {
        while (-1 != j && x[i] != x[j])
        {
            j = kmpNext[j];
        }
        if (x[++i] == x[++j])
        {
            kmpNext[i] = kmpNext[j];
        }
        else
        {
            kmpNext[i] = j;
        }
    }
    return ;
}

int KMP_Count(char x[], int n, char y[], int m)
{
	//x模板串  y 主串 返回在主串中包含模板串的个数 
    int i, j;
    int ans = 0;
    preKMP(x, n, Next);
    i = j = 0;
    while (i < m)
    {
        while (-1 != j && y[i] != x[j])
        {
            j = Next[j];
        }
        i++, j++;
        if (j == n)
        {
            ans++;
            j = Next[j];
        }
    }
    return ans;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%s%s",y,x);
		int m=strlen(y);
		int n=strlen(x);
		int ans=KMP_Count(y,m,x,n);
		printf("%d\n",ans);
	}
}
